@using Course_Work.Models
           @model Generator
   
@{
    ViewBag.Title = "GeneratorInput";
}

@Styles.Render("~/Content/Bootstrap.min.css")
<div id="inputData">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <h2>Введіть дані для генерування</h2>
            <br >
            <h3>Вкажіть кількість змінних </h3>
            <h4>Від </h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromVariables, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromVariables, "Введені некоректні дані, значення повинно бути в діапазоні від 1 до 150", new { @class = "text-danger" })
            </div>
            <br>
            <h4>До </h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToVariables, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToVariables, "Введені некоректні дані, значення повинно бути в діапазоні від 1 до 300", new { @class = "text-danger" })
            </div>
            <br>
            <h4>Крок </h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step, "Введені некоректні дані, значення повинно бути в діапазоні від 1 до 50", new { @class = "text-danger" })
            </div>
            <br>
            <h3>Вкажіть діапазон значень коефіцієнтів цільової функції </h3>
            <h4>Від </h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromC, "Введені некоректні дані, значення повинно бути в діапазоні від -100 до -1", new { @class = "text-danger" })
            </div>
            <br>
            <h4>До </h4>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToC, "Введені некоректні дані, значення повинно бути в діапазоні від 1 до 200", new { @class = "text-danger" })
            </div>
        </div>
        </div>

        
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <h3>Кількість обмежень</h3>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "Введені некоректні дані, значення повинно бути в діапазоні від 1 до 150", new { @class = "text-danger" })
            </div>
            </div>
         
            <div class="form-group">
                <h3>Вкажіть метод розв'язання</h3>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedMethod, new SelectList(Enum.GetValues(typeof(Method))), new { @class = "form-control" })
                </div>
            </div>
            <br>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Згенерувати та розв'язати" class="btn btn-default" />
                </div>
            </div>


        </div>
        }
    </div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


